# - name: create required directories
#   file:
#     path="{{ item }}"
#     state=directory
#     owner="oracle"
#     group="dba"
#     mode=0755
#   with_items:
#     - "{{ env_directory }}"

# - name: Copy file setEnv.sh
#   template: src=setEnv.sh dest={{env_directory}} backup=yes
- name: Copy file setEnv.sh
  template: src=setEnv.sh.j2 dest="{{ oracle_env }}/setEnv.sh" mode=755 backup=yes

- name: Copy file Oracle19c Client
  copy: src=LINUX.X64_193000_client_home.zip dest=/tmp

# - name: Copy required script to the target server
#   copy:
#     src=roles/oracleclient19c_install/files/{{ item }}
#     dest={{ stage_dir }}
#     owner="{{ oracle_user }}"
#     group="{{ oracle_install_group }}"
#     mode=0775
#     remote_src=no
#   with_items:
#     - tns_upd.sh
#   tags:
#    - tns_entry

# - name: Copy required script to the target server
#   copy:
#     src=roles/oracleclient19c_install/files/{{ item }}
#     dest={{ stage_dir }}
#     owner="{{ oracle_user }}"
#     group="{{ oracle_install_group }}"
#     mode=0775
#     remote_src=no
#   with_items:
#     - tns_upd.sh
#   tags:
#    - tns_entry

- name: Unpack Oracle 19c Client Software to the target server
#   remote_user: "{{ root_user }}"
#   become: yes
#   become_user: "{{ oracle_user }}"
  unarchive:
     src="/tmp/LINUX.X64_193000_client_home.zip"
     dest="{{ oracleclient_home }}"
     mode=0755
     group="{{ oracle_install_group1 }}"
     owner="{{ oracle_user }}"
     remote_src=yes
  tags:
   - oc19c_unpack

- name: Setup Oracle Client 19c Software silent response file
#   remote_user: "{{ root_user }}"
#   become: yes
#   become_user: "{{ oracle_user }}"
  template: src=./templates/{{ oraclntsoft }}.rsp.j2 dest=/tmp/{{ oraclntsoft }}.rsp mode=0755
  tags:
   - oc19c_setuprspfile

- name: Install Oracle Client 19c Software
#   remote_user: "{{ root_user }}"
#   become: yes
#   become_user: "{{ oracle_user }}"
  shell: "./runInstaller -noconfig -silent -responseFile /tmp/{{ oraclntsoft }}.rsp"  
  args:
     chdir: "{{ oracleclient_home }}"
     creates: "/tmp/installed.log"
  ignore_errors: True
  tags:
   - oc19c_softwareinstall

# - name: Validate Oracle Client Software Installation
#   when: inventory_hostname in groups['ora-x1']
#   remote_user: "{{ root_user }}"
#   become: yes
#   become_user: "{{ oracle_user }}"
#   shell: "{{ oracleclient_home }}/bin/sqlplus -version"
#   environment: "{{ env_clh }}" 
#   register: ocl_softversion 
#   ignore_errors: True
#   tags:
#    - oc1_softwareversion

# - debug:
#     msg: "{{ ocl_softversion.stdout_lines }}" 
#   when: inventory_hostname in groups['ora-x1']

- name: Create profile bash_profile
  lineinfile:
   dest: "/home/oracle/.bash_profile"
   line: "{{ item.start }}"
   insertafter: "export PATH"
  with_items:
  - { start: ". /home/oracle/env/setEnv.sh"}

# - name: Create tnsnames.ora and sqlnet.ora path if not present
#   when: inventory_hostname in groups['ora-x1']
#   remote_user: "{{ root_user }}"
#   become: yes
#   become_user: "{{ oracle_user }}"
#   file:
#     path: "{{ item.location }}"
#     state: touch
#     mode: "{{ item.mode }}"
#   with_items:
#   - { location: '{{ tns_file }}',mode: '0775'}
#   - { location: '{{ sqlnet_file }}',mode: '0775'} 

# - name: Add tns entry for the source databases
#   when: inventory_hostname in groups['ora-x1']
#   remote_user: "{{ root_user }}"
#   become: yes
#   become_user: "{{ oracle_user }}"
#   shell: '{{ stage_dir }}/tns_upd.sh {{ oracle_sid }} {{ dbhost }} {{ portnum }} {{ db_name }} {{ tns_path }}'
#   args:
#     executable: /bin/bash

# - name: Add entry to sqlnet.ora file 
#   when: inventory_hostname in groups['ora-x1']
#   blockinfile:
#     path: "{{ sqlnet_file }}"
#     marker: "------"
#     insertafter: '### Modify According to your setup'
#     state: present
#     block: |
#       SQLNET.AUTHENTICATION_SERVICES= (NTS)
#       NAMES.DIRECTORY_PATH= (TNSNAMES, EZCONNECT)

# - name: Remove stage directory 
#   when: inventory_hostname in groups['ora-x1']
#   file: path={{ stage_dir }} state=absent

# - name: display post install message
#   debug:
#     msg:
#       - 'This playbook completed below task for Single Instance at {{ansible_date_time.iso8601}}:'
#       - '- Install oracle client to the listed servers of ora-x1 groups'
#       - '- Modify tnsnames.ora and sqlnet.ora based on the business requirements'
#       - '- Validate connection using EZconnect (sqlplus username/password@server/SID)'
#       - '- END OF ALL: git clone of oracleclient19c_install repository will be shared'
